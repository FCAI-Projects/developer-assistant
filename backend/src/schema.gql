# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  """User ID"""
  id: ID!

  """User first name"""
  fname: String!

  """User last name"""
  lname: String!

  """User email"""
  email: String!

  """User password"""
  password: String

  """User Google App Password"""
  googleAppPassword: String

  """User GitHub Toekn"""
  githubToekn: String
}

type UserResponse {
  """Token of the user"""
  token: String!

  """userId of the user"""
  userId: String!
}

type Project {
  """Project ID"""
  id: ID!

  """Projact name"""
  name: String!

  """Client email"""
  clientEmail: String!

  """Project owner"""
  owner: User!

  """Project describtion"""
  describtion: String!

  """Project Budget"""
  budget: Float!
}

type Role {
  """Role ID"""
  id: ID!

  """Project ID"""
  project: Project!

  """Role Name"""
  name: String!
  createTask: Boolean!
  deleteTask: Boolean!
  editTask: Boolean!
  assignTask: Boolean!
  editProject: Boolean!
  inviteToProject: Boolean!
  deleteMember: Boolean!
}

type Member {
  """Member ID"""
  id: ID!

  """Projact ID"""
  project: Project!

  """User ID"""
  user: User!

  """User role in project"""
  role: Role

  """User Status"""
  status: String!
}

type Task {
  """Task ID"""
  id: ID!

  """Task Project ID"""
  project: Project!

  """Task name"""
  name: String!

  """Task description"""
  description: String!

  """Task assigned to"""
  assign: User!

  """Task attachments"""
  attachments: [String!]!

  """Task status"""
  status: String!

  """Task periority"""
  periority: String!

  """Task tags"""
  tags: [String!]!

  """Task started at"""
  startedAt: DateTime!

  """Task finished at"""
  finishedAt: DateTime!

  """Task deadline"""
  deadline: DateTime!

  """Task docs"""
  docs: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProjectLists {
  """List ID"""
  id: ID!

  """List Project ID"""
  project: Project!

  """Status name"""
  name: String!

  """Status Tasks ID"""
  tasks: [Task!]!

  """Status Color"""
  color: String!

  """Status Index"""
  index: Int!
}

type Note {
  """Note ID"""
  id: ID!

  """Task Id"""
  task: Task!

  """User Id"""
  user: User!

  """Task Note"""
  note: String!
}

type Comment {
  """Comment ID"""
  id: ID!

  """Relay to comment"""
  replayTo: String!

  """User ID"""
  user: User!

  """Comment Content"""
  content: String!
}

type Group {
  """Group ID"""
  id: ID!

  """Group Project"""
  project: Project!

  """Group Name"""
  name: String!

  """Group Members"""
  members: [User!]!

  """Group Admin"""
  admin: User!
}

type Expense {
  """Expense ID"""
  id: ID!

  """Expense Project"""
  project: Project!

  """Expense Name"""
  name: String!

  """Expense Amount"""
  amount: Int!

  """Expense Date"""
  date: DateTime!
}

type TimeTrackingHistory {
  """History Start"""
  start: DateTime!

  """History End"""
  end: DateTime!

  """History Duration"""
  duration: Float!
}

type TimeTracking {
  """Time Tracking ID"""
  id: ID!

  """Task ID"""
  task: Task!

  """Time Tracking of User"""
  user: User!

  """Time Tracking Started & Not Finished Yet"""
  start: DateTime!

  """Time Tracking Duration"""
  duration: String!

  """Time Tracking History"""
  history: [TimeTrackingHistory!]!
}

type Query {
  users: [User!]!
  user(id: String!): User!
  projects: [Project!]!
  project(id: String!): Project!
  roles(project: String!): [Role!]!
  role(id: String!): Role!
  filterMembers(filter: UpdateMemberInput!): [Member!]!
  member(id: String!): Member!
  tasks(project: String!): [Task!]!
  tasksByUserId(userId: String!): [Task!]!
  task(id: String!): Task!
  projectLists(project: String!): [ProjectLists!]!
  projectListsById(id: String!): ProjectLists!
  note(id: String!): Note!
  filterNotes(filter: CreateNoteInput!): Note!
  comments: [Comment!]!
  comment(id: String!): Comment!
  groups: [Group!]!
  group(id: String!): Group!
  checkMemberGroup(id: String!): Group!
  expenses(project: String!): [Expense!]!
  expense(id: String!): Expense!

  """Get all time tracking for user"""
  userTimeTracking(user: String!): [TimeTracking!]!

  """Get all time tracking for a task"""
  taskTimeTracking(task: String!): [TimeTracking!]!

  """Get all task time tracking for a user"""
  taskUserTimeTracking(task: String!): TimeTracking!
}

input UpdateMemberInput {
  project: String
  user: String
  role: String
}

input CreateNoteInput {
  """Task Id"""
  taskId: String!

  """User Id"""
  userId: String!

  """Task Note"""
  note: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): UserResponse!
  login(email: String!, password: String!): UserResponse!
  deleteUser(id: String!): User!
  updateUser(user: UpdateUserInput!): User!
  createProject(createProjectInput: CreateProjectInput!): Project!
  updateProject(id: String!, updateProjectInput: UpdateProjectInput!): Project!
  removeProject(id: String!): Project!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(id: String!, updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: String!): Role!
  inviteMember(inviteMemberInput: CreateMemberInput!): Member!
  updateMember(id: String!, updateMemberInput: UpdateMemberInput!): Member!
  removeMember(id: String!): Member!
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(id: String!, updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: String!): Task!
  createProjectLists(createProjectListsInput: CreateProjectListsInput!): ProjectLists!
  updateProjectLists(updateProjectListsInput: UpdateProjectListsInput!): ProjectLists!
  removeProjectLists(id: String!): ProjectLists!
  createNote(createNoteInput: CreateNoteInput!): Note!
  updateNote(id: String!, updateNoteInput: UpdateNoteInput!): Note!
  removeNote(id: String!): Note!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(id: String!, updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
  createGroup(createGroupInput: CreateGroupInput!): Group!
  inviteToGroup(groupId: String!, memberId: String!): Group!
  updateGroup(updateGroupInput: UpdateGroupInput!): Group!
  removeGroup(id: String!): Group!
  createExpense(createExpenseInput: CreateExpenseInput!): Expense!
  updateExpense(updateExpenseInput: UpdateExpenseInput!): Expense!
  removeExpense(id: String!): Expense!
  startTimeTracking(task: String!): TimeTracking!
  stopTimeTracking(task: String!): TimeTracking!
  removeTimeTracking(id: String!): TimeTracking!
}

input CreateUserInput {
  """First Name of the user"""
  fname: String!

  """Last Name of the user"""
  lname: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

input UpdateUserInput {
  """First Name of the user"""
  fname: String

  """Last Name of the user"""
  lname: String

  """Email of the user"""
  email: String

  """Password of the user"""
  password: String
  googleAppPassword: String
  githubToekn: String
}

input CreateProjectInput {
  """project name"""
  name: String!

  """client email"""
  clientEmail: String!

  """description of project"""
  describtion: String!

  """project budget"""
  budget: Float
}

input UpdateProjectInput {
  """project name"""
  name: String

  """client email"""
  clientEmail: String

  """description of project"""
  describtion: String

  """project budget"""
  budget: Float
}

input CreateRoleInput {
  name: String!
  project: String!
  createTask: Boolean = false
  deleteTask: Boolean = false
  editTask: Boolean = false
  assignTask: Boolean = false
  editProject: Boolean = false
  inviteToProject: Boolean = false
  deleteMember: Boolean = false
}

input UpdateRoleInput {
  name: String
  project: String
  createTask: Boolean = false
  deleteTask: Boolean = false
  editTask: Boolean = false
  assignTask: Boolean = false
  editProject: Boolean = false
  inviteToProject: Boolean = false
  deleteMember: Boolean = false
}

input CreateMemberInput {
  project: String!
  user: String!
  role: String!
}

input CreateTaskInput {
  """Task Project ID"""
  project: String!

  """Task name"""
  name: String!

  """Task description"""
  description: String!

  """Task assigned to"""
  assign: String

  """Task attachments"""
  attachments: [String!]

  """Task status"""
  status: String

  """Task periority"""
  periority: String

  """Task tags"""
  tags: [String!]

  """Task started at"""
  startedAt: DateTime

  """Task finished at"""
  finishedAt: DateTime

  """Task deadline"""
  deadline: DateTime

  """Task docs"""
  docs: String

  """List ID"""
  list: String!
}

input UpdateTaskInput {
  """Task Project ID"""
  project: String

  """Task name"""
  name: String

  """Task description"""
  description: String

  """Task assigned to"""
  assign: String

  """Task attachments"""
  attachments: [String!]

  """Task status"""
  status: String

  """Task periority"""
  periority: String

  """Task tags"""
  tags: [String!]

  """Task started at"""
  startedAt: DateTime

  """Task finished at"""
  finishedAt: DateTime

  """Task deadline"""
  deadline: DateTime

  """Task docs"""
  docs: String

  """List ID"""
  list: String
}

input CreateProjectListsInput {
  """Status Project ID"""
  project: String!

  """Status name"""
  name: String!

  """Status tasks ID"""
  tasks: [String!]!

  """Status Color"""
  color: String!
}

input UpdateProjectListsInput {
  """Status Project ID"""
  project: String

  """Status name"""
  name: String

  """Status tasks ID"""
  tasks: [String!]

  """Status Color"""
  color: String
  id: String!

  """Status Index"""
  index: Int
}

input UpdateNoteInput {
  """Task Id"""
  taskId: String

  """User Id"""
  userId: String

  """Task Note"""
  note: String
}

input CreateCommentInput {
  """Comment ID"""
  replayTo: String

  """User ID"""
  user: String!

  """Comment Content"""
  content: String!
}

input UpdateCommentInput {
  """Comment ID"""
  replayTo: String

  """User ID"""
  user: String

  """Comment Content"""
  content: String
}

input CreateGroupInput {
  """Group Project"""
  project: String!

  """Group Name"""
  name: String!

  """Group Members"""
  members: [String!]
}

input UpdateGroupInput {
  """Group Project"""
  project: String

  """Group Name"""
  name: String

  """Group Members"""
  members: [String!]
  id: String!
}

input CreateExpenseInput {
  """Expense Project"""
  project: String!

  """Expense Name"""
  name: String!

  """Expense Amount"""
  amount: Int!

  """Expense Date"""
  date: DateTime!
}

input UpdateExpenseInput {
  """Expense Project"""
  project: String

  """Expense Name"""
  name: String

  """Expense Amount"""
  amount: Int

  """Expense Date"""
  date: DateTime
  id: String!
}