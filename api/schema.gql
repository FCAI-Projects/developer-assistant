# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type CustomRoles {
  _id: String!
  assignTask: Boolean!
  createTask: Boolean!
  deleteMember: Boolean!
  deleteTask: Boolean!
  editProject: Boolean!
  editTask: Boolean!
  inviteToProject: Boolean!
  name: String!
  projectId: String!
}

input CustomRolesInput {
  assignTask: Boolean = false
  createTask: Boolean = false
  deleteMember: Boolean = false
  deleteTask: Boolean = false
  editProject: Boolean = false
  editTask: Boolean = false
  inviteToProject: Boolean = false
  name: String!
  projectId: String!
}

type Mutation {
  addCusomRoles(CustomRoles: CustomRolesInput!): [CustomRoles!]
  addUser(userInput: UserInput!): User
  createProject(userInput: ProjectInput!): Project!
  createProjectRole(ProjectsMembers: ProjectsMembersInput!): ProjectsMembers
  deleteCustomRoles(customRoleId: String!): [CustomRoles!]
  deleteProject(projectId: String!): Project
  deleteProjectMembers(ProjectsMembersId: String!): ProjectsMembers
  deleteUser(userId: String!): User
  editUser(userId: String!, userInput: UserUpdateInfo!): User
  UpdateProject(projectId: String!, projectUpdateData: ProjectUpdateData!): Project
}

type Project {
  _id: String!
  budget: Float!
  clientEmail: String!
  describtion: String!
  name: String!
}

input ProjectInput {
  budget: Float!
  clientEmail: String!
  describtion: String!
  name: String!
}

type ProjectsMembers {
  _id: String!
  badges: String!
  customId: String!
  projectId: String!
  role: String!
  userId: String!
}

input ProjectsMembersInput {
  badges: String!
  customId: String!
  projectId: String!
  role: String!
  userId: String!
}

input ProjectUpdateData {
  budget: Float
  describtion: String
  name: String
}

type Query {
  getAllCustomRoles(projectId: String!): [CustomRoles!]
  getAllMembersOfProjects(projectId: String!): [ProjectsMembers!]
  getAllMembersOfRole(role: String!): [ProjectsMembers!]
  getprojects: [Project!]
  getUser(projectId: String!): Project
  getUsers: [User!]
}

type User {
  _id: String!
  email: String!
  name: String!
  password: String!
}

input UserInput {
  email: String!
  name: String!
  password: String!
}

input UserUpdateInfo {
  email: String
  name: String
}
